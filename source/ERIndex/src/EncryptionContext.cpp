/*
 * EncryptionContext.cpp
 *
 *  Created on: 27/nov/2014
 *      Author: fernando
 */

#include "EncryptionContext.h"

namespace std {

EncryptionContext::EncryptionContext(u8 *key,uint64_t nonce) {
	this->key=key;
	this->nonce=nonce;
	ksBlockBuffer=new u8[64];  //keystream block buffer: contains the 64 bytes generated by the last Salsa20/20 invocation
	for (int i=0;i<64;i++)	//filling with ones implies no encryption/decryption
		ksBlockBuffer[i]=255;
	ksBlockOffset=64; //current offset of the keystream block buffer (initially after the first byte, to force the initial population of the buffer)
	ksBlockCounter=0;  //identifies a 64 byte block within the Salsa20/20 keystream
}

EncryptionContext::EncryptionContext(const EncryptionContext &obj){
	this->key=obj.key;
	this->nonce=obj.nonce;
	this->ksBlockBuffer=new u8[64];
	for (int i=0;i<64;i++)
		this->ksBlockBuffer[i]=obj.ksBlockBuffer[i];
	this->ksBlockOffset=obj.ksBlockOffset;
	this->ksBlockCounter=obj.ksBlockCounter;
}


EncryptionContext::~EncryptionContext() {
	delete[] ksBlockBuffer;
}

} /* namespace std */
